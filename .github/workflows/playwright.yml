name: Playwright Tests for Blazor App

# Trigger on push to main or pull requests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      blazorapp:
        image: mcr.microsoft.com/dotnet/aspnet:7.0-bullseye-slim # Adjust this if using a different .NET version
        ports:
          - 5128:5128
        options: > 
          --name blazor-app-service
          --health-cmd "curl --fail http://localhost:5128 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up .NET Core SDK
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.0.x'  # Use the version matching your Blazor app

      # Step 3: Restore dependencies
      - name: Restore Dependencies
        run: dotnet restore

      # Step 4: Build the Blazor app
      - name: Build the Blazor App
        run: dotnet build --configuration Release

      # Step 5: Start Blazor app and run it in the background
      - name: Run Blazor App
        run: |
          dotnet run --configuration Release --no-build --urls=http://localhost:5128 &
          sleep 20 # Wait for the Blazor app to start
        continue-on-error: true

      # Step 6: Set up Node.js for Playwright
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x' # Playwright works well with Node.js 14 or higher

      # Step 7: Install dependencies
      - name: Install Playwright and Dependencies
        run: |
          npm install
          npx playwright install --with-deps

      # Step 8: Run Playwright tests
      - name: Run Playwright Tests
        run: npm test

      # Step 9: Cleanup after tests (optional)
      - name: Stop Blazor App
        run: kill $(lsof -t -i:5128) || true
