name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
<<<<<<< HEAD
=======

>>>>>>> 2f8ca3933efda727bcaf7db8372fb4e7800d06a2
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
<<<<<<< HEAD
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test
=======
    # Step 1: Checkout the repository
    - uses: actions/checkout@v4

    # Step 2: Set up Node.js (for Playwright)
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*  # Use latest LTS Node.js version

    # Step 3: Install dependencies (Node.js)
    - name: Install dependencies
      run: npm ci

    # Step 4: Install Playwright Browsers
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    # Step 5: Set up .NET Core for Blazor WebAssembly
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'  # Set the correct version based on your project

    # Step 6: Restore .NET dependencies
    - name: Restore .NET dependencies
      run: dotnet restore

    # Step 7: Build the Blazor project
    - name: Build the Blazor project
      run: dotnet build --configuration Release

    # Step 8: Start Blazor WebAssembly app in the background
    - name: Start Blazor WebAssembly app
      run: |
        nohup dotnet run --project BlazorApp/BlazorApp.csproj --urls http://localhost:5128 > app.log 2>&1 &
      timeout-minutes: 3

    # Step 9: Wait for Blazor WebAssembly app to be available
    - name: Wait for Blazor WebAssembly app to be available
      run: |
        echo "Waiting for Blazor WebAssembly app to be available..."
        for i in {1..10}; do
          curl --silent --fail http://localhost:5128 && break
          echo "Waiting for the server... retry $i"
          sleep 6
        done
        curl --silent --fail http://localhost:5128 || (echo "Server not available, failing build." && exit 1)

    # Step 10: Run Playwright tests
    - name: Run Playwright tests
      run: npx playwright test

    # Step 11: Upload Playwright test report (optional)
>>>>>>> 2f8ca3933efda727bcaf7db8372fb4e7800d06a2
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
<<<<<<< HEAD
        retention-days: 30
=======
        retention-days: 30
>>>>>>> 2f8ca3933efda727bcaf7db8372fb4e7800d06a2
